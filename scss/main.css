@charset "UTF-8";
/* делаем везде так, чтобы свойства width и height задавали не размеры контента, а размеры блока */
* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/* общие настройки страницы */
body {
  /* подключаем сетку */
  display: -ms-grid;
  display: grid;
  /* ставим всё по центру */
  place-items: center;
  /* если что-то не помещается на своё место — скрываем то, что не поместилось */
  overflow: hidden;
}

/* общий блок для всех элементов */
.deal-wheel {
  /* задаём переменные блока, внутри которого всё будет рисоваться */
  /* размеры колеса */
  --size: clamp(250px, 80vmin, 700px);
  /* clamp — функция CSS, которая задаёт три размера: минимальное, предпочтительное и максимальное. В данном случае мы хотим, чтобы колесо было не меньше 250 пикселей, не больше 700 пикселей, но в идеале — 80% от безопасно малой высоты окна браузера */
  /* настройки яркости и заливки фона секторов. Нам понадобится описать поведение градиента, это у нас делается через много переменных */
  --lg-hs: 0 3%;
  --lg-stop: 50%;
  --lg: linear-gradient(
      hsl(var(--lg-hs) 0%) 0 var(--lg-stop),
      hsl(var(--lg-hs) 20%) var(--lg-stop) 100%
    );
  /* добавляем позиционирование относительно других элементов */
  position: relative;
  /* подключаем стандартную CSS-сетку */
  display: -ms-grid;
  display: grid;
  grid-gap: calc(var(--size) / 20);
  /* выравниваем содержимое блока по центру */
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  /* задаём имена областей внутри сетки — в CSS теперь можно прямо назвать эти области */
      grid-template-areas: "spinner" "trigger";
  /* устанавливаем размер шрифта */
  font-size: calc(var(--size) / 21);
}

/* всё, что относится ко внутренним элементам главного блока, будет находиться в области сетки с названием spinner */
.deal-wheel > * {
  -ms-grid-row: 1;
  -ms-grid-column: 1;
  grid-area: spinner;
}

/* сам блок и кнопка будут находиться в области сетки с названием trigger и будут выровнены по центру */
.deal-wheel .btn-spin {
  -ms-grid-row: 3;
  -ms-grid-column: 1;
  grid-area: trigger;
  -ms-grid-column-align: center;
      justify-self: center;
}

/* сектор колеса */
.spinner {
  /* добавляем относительное позиционирование */
  position: relative;
  /* подключаем сетку */
  display: -ms-grid;
  display: grid;
  /* выравниваем всё по центру */
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  /* добавляем элемент в сетку */
      grid-template-areas: "spinner";
  /* устанавливаем размеры */
  width: var(--size);
  height: var(--size);
  /* поворачиваем элемент  */
  -webkit-transform: rotate(calc(var(--rotate, 25) * 1deg));
          transform: rotate(calc(var(--rotate, 25) * 1deg));
  /* рисуем круглую обводку, а всё, что не поместится, — будет скрыто за кругом */
  border-radius: 50%;
}

/* всё, что внутри этого блока, будет находиться в области сетки с названием spinner */
.spinner * {
  -ms-grid-row: 1;
  -ms-grid-column: 1;
  grid-area: spinner;
}

/* текст на секторах */
.prize {
  /* включаем «гибкую» вёрстку */
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  /* задаём отступы от краёв блока */
  padding: 0 calc(var(--size) / 6) 0 calc(var(--size) / 20);
  /* устанавливаем размеры */
  width: 50%;
  height: 50%;
  /* устанавливаем координаты, относительно которых будем вращать текст */
  -webkit-transform-origin: center right;
          transform-origin: center right;
  /* поворачиваем текст */
  -webkit-transform: rotate(var(--rotate));
          transform: rotate(var(--rotate));
  /* запрещаем пользователю выделять мышкой текст на секторах */
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

/* кнопка запуска колеса */
.btn-spin {
  color: white;
  background: black;
  border: none;
  /* берём размер шрифта такой же, как в колесе */
  font-size: inherit;
  /* добавляем отступы от текста внутри кнопки */
  padding: 0.9rem 2rem 1rem;
  /* скругляем углы */
  border-radius: 0.5rem;
  /* меняем внешний вид курсора над кнопкой на руку*/
  cursor: pointer;
}

/* если кнопка нажата и неактивна */
.btn-spin:disabled {
  /* меняем внешний вид курсора */
  cursor: progress;
  /* делаем кнопку полупрозрачной */
  opacity: 0.25;
}

/* язычок */
.ticker {
  /* добавляем относительное позиционирование */
  position: relative;
  /* устанавливаем размеры */
  left: calc(var(--size) / -15);
  width: calc(var(--size) / 10);
  height: calc(var(--size) / 20);
  /* фон язычка */
  background: var(--lg);
  /* делаем так, чтобы язычок был выше колеса */
  z-index: 1;
  /* форма язычка */
  -webkit-clip-path: polygon(20% 0, 100% 50%, 20% 100%, 0% 50%);
          clip-path: polygon(20% 0, 100% 50%, 20% 100%, 0% 50%);
  /* устанавливаем точку, относительно которой будет вращаться язычок при движении колеса */
  -webkit-transform-origin: center left;
          transform-origin: center left;
}

/* анимация вращения */
.is-spinning .spinner {
  -webkit-transition: -webkit-transform 8s cubic-bezier(0.1, -0.01, 0, 1);
  transition: -webkit-transform 8s cubic-bezier(0.1, -0.01, 0, 1);
  transition: transform 8s cubic-bezier(0.1, -0.01, 0, 1);
  transition: transform 8s cubic-bezier(0.1, -0.01, 0, 1), -webkit-transform 8s cubic-bezier(0.1, -0.01, 0, 1);
}

/* анимация движения язычка */
.is-spinning .ticker {
  -webkit-animation: tick 700ms cubic-bezier(0.34, 1.56, 0.64, 1);
          animation: tick 700ms cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* эффект, когда колесо задевает язычок при вращении */
@-webkit-keyframes tick {
  40% {
    /* чуть поворачиваем язычок наверх в середине анимации */
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
}
@keyframes tick {
  40% {
    /* чуть поворачиваем язычок наверх в середине анимации */
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
}
/* анимируем выпавший сектор */
.prize.selected .text {
  /* делаем текст белым */
  color: white;
  /* настраиваем длительность анимации */
  -webkit-animation: selected 800ms ease;
          animation: selected 800ms ease;
}

/* настраиваем анимацию текста на выпавшем секторе по кадрам */
@-webkit-keyframes selected {
  /* что происходит на 25% от начала анимации */
  25% {
    /* увеличиваем текст в 1,25 раза */
    -webkit-transform: scale(1.25);
            transform: scale(1.25);
    /* добавляем тексту тень */
    text-shadow: 1vmin 1vmin 0 hsla(0deg, 0%, 0%, 0.1);
  }
  40% {
    -webkit-transform: scale(0.92);
            transform: scale(0.92);
    text-shadow: 0 0 0 hsla(0deg, 0%, 0%, 0.2);
  }
  60% {
    -webkit-transform: scale(1.02);
            transform: scale(1.02);
    text-shadow: 0.5vmin 0.5vmin 0 hsla(0deg, 0%, 0%, 0.1);
  }
  75% {
    -webkit-transform: scale(0.98);
            transform: scale(0.98);
  }
  85% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}
@keyframes selected {
  /* что происходит на 25% от начала анимации */
  25% {
    /* увеличиваем текст в 1,25 раза */
    -webkit-transform: scale(1.25);
            transform: scale(1.25);
    /* добавляем тексту тень */
    text-shadow: 1vmin 1vmin 0 hsla(0deg, 0%, 0%, 0.1);
  }
  40% {
    -webkit-transform: scale(0.92);
            transform: scale(0.92);
    text-shadow: 0 0 0 hsla(0deg, 0%, 0%, 0.2);
  }
  60% {
    -webkit-transform: scale(1.02);
            transform: scale(1.02);
    text-shadow: 0.5vmin 0.5vmin 0 hsla(0deg, 0%, 0%, 0.1);
  }
  75% {
    -webkit-transform: scale(0.98);
            transform: scale(0.98);
  }
  85% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}